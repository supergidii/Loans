{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'InvestmentList',\n  setup: function setup() {\n    var store = useStore();\n    var investments = computed(function () {\n      return store.state.investments.list;\n    });\n    var loading = computed(function () {\n      return store.state.investments.loading;\n    });\n    var error = computed(function () {\n      return store.state.investments.error;\n    });\n    var totalInvested = computed(function () {\n      return investments.value.reduce(function (sum, inv) {\n        return sum + inv.amount;\n      }, 0).toFixed(2);\n    });\n    var totalExpectedReturns = computed(function () {\n      return investments.value.reduce(function (sum, inv) {\n        return sum + inv.expectedReturn;\n      }, 0).toFixed(2);\n    });\n    var activeInvestments = computed(function () {\n      return investments.value.filter(function (inv) {\n        return inv.status === 'ACTIVE';\n      }).length;\n    });\n    var formatDate = function formatDate(dateString) {\n      return new Date(dateString).toLocaleDateString();\n    };\n    onMounted(function () {\n      store.dispatch('investments/fetchInvestments');\n    });\n    return {\n      investments: investments,\n      loading: loading,\n      error: error,\n      totalInvested: totalInvested,\n      totalExpectedReturns: totalExpectedReturns,\n      activeInvestments: activeInvestments,\n      formatDate: formatDate\n    };\n  }\n};","map":{"version":3,"names":["computed","onMounted","useStore","name","setup","store","investments","state","list","loading","error","totalInvested","value","reduce","sum","inv","amount","toFixed","totalExpectedReturns","expectedReturn","activeInvestments","filter","status","length","formatDate","dateString","Date","toLocaleDateString","dispatch"],"sources":["C:\\Users\\UPFRONT\\Documents\\newprol\\src\\frontend\\src\\components\\InvestmentList.vue"],"sourcesContent":["<template>\r\n  <div class=\"investment-list\">\r\n    <h2>Your Investments</h2>\r\n    \r\n    <div v-if=\"loading\" class=\"loading\">\r\n      Loading investments...\r\n    </div>\r\n    \r\n    <div v-else-if=\"error\" class=\"error\">\r\n      {{ error }}\r\n    </div>\r\n    \r\n    <div v-else-if=\"investments.length === 0\" class=\"no-investments\">\r\n      <p>You haven't made any investments yet.</p>\r\n      <p>Start investing to see your portfolio grow!</p>\r\n    </div>\r\n    \r\n    <div v-else class=\"investments-grid\">\r\n      <div v-for=\"investment in investments\" :key=\"investment._id\" class=\"investment-card\">\r\n        <div class=\"investment-header\">\r\n          <h3>Investment #{{ investment._id.slice(-4) }}</h3>\r\n          <span :class=\"['status', investment.status.toLowerCase()]\">\r\n            {{ investment.status }}\r\n          </span>\r\n        </div>\r\n        \r\n        <div class=\"investment-details\">\r\n          <div class=\"detail-item\">\r\n            <span class=\"label\">Amount:</span>\r\n            <span class=\"value\">${{ investment.amount }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <span class=\"label\">Duration:</span>\r\n            <span class=\"value\">{{ investment.duration }} days</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <span class=\"label\">Interest Rate:</span>\r\n            <span class=\"value\">{{ investment.interestRate }}%</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <span class=\"label\">Expected Return:</span>\r\n            <span class=\"value\">${{ investment.expectedReturn }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <span class=\"label\">Start Date:</span>\r\n            <span class=\"value\">{{ formatDate(investment.startDate) }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <span class=\"label\">End Date:</span>\r\n            <span class=\"value\">{{ formatDate(investment.endDate) }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"investment-stats\" v-if=\"investments.length > 0\">\r\n      <h3>Investment Statistics</h3>\r\n      <div class=\"stats-grid\">\r\n        <div class=\"stat-card\">\r\n          <h4>Total Invested</h4>\r\n          <p>${{ totalInvested }}</p>\r\n        </div>\r\n        <div class=\"stat-card\">\r\n          <h4>Expected Returns</h4>\r\n          <p>${{ totalExpectedReturns }}</p>\r\n        </div>\r\n        <div class=\"stat-card\">\r\n          <h4>Active Investments</h4>\r\n          <p>{{ activeInvestments }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nexport default {\r\n  name: 'InvestmentList',\r\n  setup() {\r\n    const store = useStore()\r\n\r\n    const investments = computed(() => store.state.investments.list)\r\n    const loading = computed(() => store.state.investments.loading)\r\n    const error = computed(() => store.state.investments.error)\r\n\r\n    const totalInvested = computed(() => {\r\n      return investments.value.reduce((sum, inv) => sum + inv.amount, 0).toFixed(2)\r\n    })\r\n\r\n    const totalExpectedReturns = computed(() => {\r\n      return investments.value.reduce((sum, inv) => sum + inv.expectedReturn, 0).toFixed(2)\r\n    })\r\n\r\n    const activeInvestments = computed(() => {\r\n      return investments.value.filter(inv => inv.status === 'ACTIVE').length\r\n    })\r\n\r\n    const formatDate = (dateString) => {\r\n      return new Date(dateString).toLocaleDateString()\r\n    }\r\n\r\n    onMounted(() => {\r\n      store.dispatch('investments/fetchInvestments')\r\n    })\r\n\r\n    return {\r\n      investments,\r\n      loading,\r\n      error,\r\n      totalInvested,\r\n      totalExpectedReturns,\r\n      activeInvestments,\r\n      formatDate\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.investment-list {\r\n  padding: 20px;\r\n}\r\n\r\n.loading, .error, .no-investments {\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #666;\r\n}\r\n\r\n.error {\r\n  color: #dc3545;\r\n}\r\n\r\n.investments-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.investment-card {\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  padding: 20px;\r\n}\r\n\r\n.investment-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.status {\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  font-size: 0.9em;\r\n}\r\n\r\n.status.active {\r\n  background-color: #28a745;\r\n  color: white;\r\n}\r\n\r\n.status.completed {\r\n  background-color: #17a2b8;\r\n  color: white;\r\n}\r\n\r\n.investment-details {\r\n  display: grid;\r\n  gap: 10px;\r\n}\r\n\r\n.detail-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 5px 0;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.label {\r\n  color: #666;\r\n}\r\n\r\n.value {\r\n  font-weight: 500;\r\n}\r\n\r\n.investment-stats {\r\n  margin-top: 40px;\r\n}\r\n\r\n.stats-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.stat-card {\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  padding: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.stat-card h4 {\r\n  margin: 0;\r\n  color: #666;\r\n  font-size: 0.9em;\r\n}\r\n\r\n.stat-card p {\r\n  margin: 10px 0 0;\r\n  font-size: 1.5em;\r\n  font-weight: bold;\r\n  color: #007bff;\r\n}\r\n</style> "],"mappings":";;;;;;;;AA4EA,SAASA,QAAQ,EAAEC,SAAQ,QAAS,KAAI;AACxC,SAASC,QAAO,QAAS,MAAK;AAE9B,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,KAAK,WAALA,KAAKA,CAAA,EAAG;IACN,IAAMC,KAAI,GAAIH,QAAQ,CAAC;IAEvB,IAAMI,WAAU,GAAIN,QAAQ,CAAC;MAAA,OAAMK,KAAK,CAACE,KAAK,CAACD,WAAW,CAACE,IAAI;IAAA;IAC/D,IAAMC,OAAM,GAAIT,QAAQ,CAAC;MAAA,OAAMK,KAAK,CAACE,KAAK,CAACD,WAAW,CAACG,OAAO;IAAA;IAC9D,IAAMC,KAAI,GAAIV,QAAQ,CAAC;MAAA,OAAMK,KAAK,CAACE,KAAK,CAACD,WAAW,CAACI,KAAK;IAAA;IAE1D,IAAMC,aAAY,GAAIX,QAAQ,CAAC,YAAM;MACnC,OAAOM,WAAW,CAACM,KAAK,CAACC,MAAM,CAAC,UAACC,GAAG,EAAEC,GAAG;QAAA,OAAKD,GAAE,GAAIC,GAAG,CAACC,MAAM;MAAA,GAAE,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IAC9E,CAAC;IAED,IAAMC,oBAAmB,GAAIlB,QAAQ,CAAC,YAAM;MAC1C,OAAOM,WAAW,CAACM,KAAK,CAACC,MAAM,CAAC,UAACC,GAAG,EAAEC,GAAG;QAAA,OAAKD,GAAE,GAAIC,GAAG,CAACI,cAAc;MAAA,GAAE,CAAC,CAAC,CAACF,OAAO,CAAC,CAAC;IACtF,CAAC;IAED,IAAMG,iBAAgB,GAAIpB,QAAQ,CAAC,YAAM;MACvC,OAAOM,WAAW,CAACM,KAAK,CAACS,MAAM,CAAC,UAAAN,GAAE;QAAA,OAAKA,GAAG,CAACO,MAAK,KAAM,QAAQ;MAAA,EAAC,CAACC,MAAK;IACvE,CAAC;IAED,IAAMC,UAAS,GAAI,SAAbA,UAASA,CAAKC,UAAU,EAAK;MACjC,OAAO,IAAIC,IAAI,CAACD,UAAU,CAAC,CAACE,kBAAkB,CAAC;IACjD;IAEA1B,SAAS,CAAC,YAAM;MACdI,KAAK,CAACuB,QAAQ,CAAC,8BAA8B;IAC/C,CAAC;IAED,OAAO;MACLtB,WAAW,EAAXA,WAAW;MACXG,OAAO,EAAPA,OAAO;MACPC,KAAK,EAALA,KAAK;MACLC,aAAa,EAAbA,aAAa;MACbO,oBAAoB,EAApBA,oBAAoB;MACpBE,iBAAiB,EAAjBA,iBAAiB;MACjBI,UAAS,EAATA;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}