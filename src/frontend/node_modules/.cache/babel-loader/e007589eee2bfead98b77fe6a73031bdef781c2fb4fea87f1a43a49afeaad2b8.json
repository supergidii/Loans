{"ast":null,"code":"import axios from 'axios';\nexport default {\n  namespaced: true,\n  state: {\n    token: localStorage.getItem('token') || null,\n    user: JSON.parse(localStorage.getItem('user')) || null\n  },\n  mutations: {\n    SET_TOKEN(state, token) {\n      state.token = token;\n      if (token) {\n        localStorage.setItem('token', token);\n      } else {\n        localStorage.removeItem('token');\n      }\n    },\n    SET_USER(state, user) {\n      state.user = user;\n      if (user) {\n        localStorage.setItem('user', JSON.stringify(user));\n      } else {\n        localStorage.removeItem('user');\n      }\n    }\n  },\n  actions: {\n    async login({\n      commit\n    }, credentials) {\n      try {\n        const response = await axios.post('/api/auth/login', credentials);\n        const {\n          token,\n          user\n        } = response.data;\n        commit('SET_TOKEN', token);\n        commit('SET_USER', user);\n        return user;\n      } catch (error) {\n        throw error;\n      }\n    },\n    async register({\n      commit\n    }, userData) {\n      try {\n        const response = await axios.post('/api/auth/register', userData);\n        const {\n          token,\n          user\n        } = response.data;\n        commit('SET_TOKEN', token);\n        commit('SET_USER', user);\n        return user;\n      } catch (error) {\n        throw error;\n      }\n    },\n    async logout({\n      commit\n    }) {\n      commit('SET_TOKEN', null);\n      commit('SET_USER', null);\n    },\n    async fetchUser({\n      commit\n    }) {\n      try {\n        const response = await axios.get('/api/auth/user');\n        commit('SET_USER', response.data);\n        return response.data;\n      } catch (error) {\n        commit('SET_TOKEN', null);\n        commit('SET_USER', null);\n        throw error;\n      }\n    }\n  },\n  getters: {\n    isAuthenticated: state => !!state.token,\n    user: state => state.user,\n    token: state => state.token\n  }\n};","map":{"version":3,"names":["axios","namespaced","state","token","localStorage","getItem","user","JSON","parse","mutations","SET_TOKEN","setItem","removeItem","SET_USER","stringify","actions","login","commit","credentials","response","post","data","error","register","userData","logout","fetchUser","get","getters","isAuthenticated"],"sources":["C:/Users/UPFRONT/Documents/newprol/src/frontend/src/store/modules/auth.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    token: localStorage.getItem('token') || null,\r\n    user: JSON.parse(localStorage.getItem('user')) || null\r\n  },\r\n  mutations: {\r\n    SET_TOKEN(state, token) {\r\n      state.token = token\r\n      if (token) {\r\n        localStorage.setItem('token', token)\r\n      } else {\r\n        localStorage.removeItem('token')\r\n      }\r\n    },\r\n    SET_USER(state, user) {\r\n      state.user = user\r\n      if (user) {\r\n        localStorage.setItem('user', JSON.stringify(user))\r\n      } else {\r\n        localStorage.removeItem('user')\r\n      }\r\n    }\r\n  },\r\n  actions: {\r\n    async login({ commit }, credentials) {\r\n      try {\r\n        const response = await axios.post('/api/auth/login', credentials)\r\n        const { token, user } = response.data\r\n        commit('SET_TOKEN', token)\r\n        commit('SET_USER', user)\r\n        return user\r\n      } catch (error) {\r\n        throw error\r\n      }\r\n    },\r\n    async register({ commit }, userData) {\r\n      try {\r\n        const response = await axios.post('/api/auth/register', userData)\r\n        const { token, user } = response.data\r\n        commit('SET_TOKEN', token)\r\n        commit('SET_USER', user)\r\n        return user\r\n      } catch (error) {\r\n        throw error\r\n      }\r\n    },\r\n    async logout({ commit }) {\r\n      commit('SET_TOKEN', null)\r\n      commit('SET_USER', null)\r\n    },\r\n    async fetchUser({ commit }) {\r\n      try {\r\n        const response = await axios.get('/api/auth/user')\r\n        commit('SET_USER', response.data)\r\n        return response.data\r\n      } catch (error) {\r\n        commit('SET_TOKEN', null)\r\n        commit('SET_USER', null)\r\n        throw error\r\n      }\r\n    }\r\n  },\r\n  getters: {\r\n    isAuthenticated: state => !!state.token,\r\n    user: state => state.user,\r\n    token: state => state.token\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}