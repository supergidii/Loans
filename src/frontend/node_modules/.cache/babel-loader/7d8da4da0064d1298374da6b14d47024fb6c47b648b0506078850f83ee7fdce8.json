{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"investment-form\"\n};\nvar _hoisted_2 = {\n  \"class\": \"form-group\"\n};\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"invalid-feedback\"\n};\nvar _hoisted_4 = {\n  \"class\": \"form-group\"\n};\nvar _hoisted_5 = {\n  key: 0,\n  \"class\": \"invalid-feedback\"\n};\nvar _hoisted_6 = {\n  key: 0,\n  \"class\": \"investment-summary\"\n};\nvar _hoisted_7 = [\"disabled\"];\nvar _hoisted_8 = {\n  key: 0,\n  \"class\": \"alert alert-danger mt-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers(function () {\n      return $setup.createInvestment && $setup.createInvestment.apply($setup, arguments);\n    }, [\"prevent\"])),\n    \"class\": \"form\"\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    \"for\": \"amount\"\n  }, \"Investment Amount ($)\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"amount\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $setup.formData.amount = $event;\n    }),\n    min: \"100\",\n    required: \"\",\n    \"class\": _normalizeClass([\"form-control\", {\n      'is-invalid': $setup.errors.amount\n    }])\n  }, null, 2 /* CLASS */), [[_vModelText, $setup.formData.amount]]), $setup.errors.amount ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($setup.errors.amount), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _cache[4] || (_cache[4] = _createElementVNode(\"small\", {\n    \"class\": \"text-muted\"\n  }, \"Minimum investment: $100\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_4, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    \"for\": \"duration\"\n  }, \"Duration (days)\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"duration\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $setup.formData.duration = $event;\n    }),\n    min: \"30\",\n    max: \"365\",\n    required: \"\",\n    \"class\": _normalizeClass([\"form-control\", {\n      'is-invalid': $setup.errors.duration\n    }])\n  }, null, 2 /* CLASS */), [[_vModelText, $setup.formData.duration]]), $setup.errors.duration ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString($setup.errors.duration), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _cache[6] || (_cache[6] = _createElementVNode(\"small\", {\n    \"class\": \"text-muted\"\n  }, \"Duration between 30 and 365 days\", -1 /* HOISTED */))]), $setup.formData.amount && $setup.formData.duration ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", null, \"Investment Summary\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, \"Amount: $\" + _toDisplayString($setup.formData.amount), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Duration: \" + _toDisplayString($setup.formData.duration) + \" days\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"Interest Rate: \" + _toDisplayString($setup.interestRate) + \"%\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"Expected Return: $\" + _toDisplayString($setup.expectedReturn), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    type: \"submit\",\n    \"class\": \"btn btn-primary\",\n    disabled: $setup.loading\n  }, _toDisplayString($setup.loading ? 'Creating Investment...' : 'Create Investment'), 9 /* TEXT, PROPS */, _hoisted_7)], 32 /* NEED_HYDRATION */), $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _toDisplayString($setup.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","$setup","createInvestment","apply","arguments","_hoisted_2","type","id","$event","formData","amount","min","required","_normalizeClass","errors","_hoisted_3","_toDisplayString","_createCommentVNode","_hoisted_4","duration","max","_hoisted_5","_hoisted_6","interestRate","expectedReturn","disabled","loading","_hoisted_7","error","_hoisted_8"],"sources":["C:\\Users\\UPFRONT\\Documents\\newprol\\src\\frontend\\src\\components\\InvestmentForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"investment-form\">\r\n    <form @submit.prevent=\"createInvestment\" class=\"form\">\r\n      <div class=\"form-group\">\r\n        <label for=\"amount\">Investment Amount ($)</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"amount\"\r\n          v-model=\"formData.amount\"\r\n          min=\"100\"\r\n          required\r\n          class=\"form-control\"\r\n          :class=\"{ 'is-invalid': errors.amount }\"\r\n        />\r\n        <div class=\"invalid-feedback\" v-if=\"errors.amount\">\r\n          {{ errors.amount }}\r\n        </div>\r\n        <small class=\"text-muted\">Minimum investment: $100</small>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"duration\">Duration (days)</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"duration\"\r\n          v-model=\"formData.duration\"\r\n          min=\"30\"\r\n          max=\"365\"\r\n          required\r\n          class=\"form-control\"\r\n          :class=\"{ 'is-invalid': errors.duration }\"\r\n        />\r\n        <div class=\"invalid-feedback\" v-if=\"errors.duration\">\r\n          {{ errors.duration }}\r\n        </div>\r\n        <small class=\"text-muted\">Duration between 30 and 365 days</small>\r\n      </div>\r\n\r\n      <div class=\"investment-summary\" v-if=\"formData.amount && formData.duration\">\r\n        <h3>Investment Summary</h3>\r\n        <p>Amount: ${{ formData.amount }}</p>\r\n        <p>Duration: {{ formData.duration }} days</p>\r\n        <p>Interest Rate: {{ interestRate }}%</p>\r\n        <p>Expected Return: ${{ expectedReturn }}</p>\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"loading\">\r\n        {{ loading ? 'Creating Investment...' : 'Create Investment' }}\r\n      </button>\r\n    </form>\r\n\r\n    <div v-if=\"error\" class=\"alert alert-danger mt-3\">\r\n      {{ error }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nexport default {\r\n  name: 'InvestmentForm',\r\n  setup() {\r\n    const store = useStore()\r\n    const formData = ref({\r\n      amount: '',\r\n      duration: ''\r\n    })\r\n    const errors = ref({})\r\n    const loading = ref(false)\r\n    const error = ref(null)\r\n    const interestRate = 10 // Default interest rate\r\n\r\n    const expectedReturn = computed(() => {\r\n      if (!formData.value.amount || !formData.value.duration) return 0\r\n      const principal = parseFloat(formData.value.amount)\r\n      const days = parseFloat(formData.value.duration)\r\n      const interest = (principal * interestRate * days) / (365 * 100)\r\n      return (principal + interest).toFixed(2)\r\n    })\r\n\r\n    const validateForm = () => {\r\n      errors.value = {}\r\n      if (!formData.value.amount || formData.value.amount < 100) {\r\n        errors.value.amount = 'Investment amount must be at least $100'\r\n      }\r\n      if (!formData.value.duration || formData.value.duration < 30 || formData.value.duration > 365) {\r\n        errors.value.duration = 'Duration must be between 30 and 365 days'\r\n      }\r\n      return Object.keys(errors.value).length === 0\r\n    }\r\n\r\n    const createInvestment = async () => {\r\n      if (!validateForm()) return\r\n\r\n      loading.value = true\r\n      error.value = null\r\n\r\n      try {\r\n        await store.dispatch('investments/createInvestment', formData.value)\r\n        formData.value = { amount: '', duration: '' }\r\n        store.dispatch('investments/fetchInvestments')\r\n      } catch (err) {\r\n        error.value = err.response?.data?.error || 'Failed to create investment'\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    return {\r\n      formData,\r\n      errors,\r\n      loading,\r\n      error,\r\n      interestRate,\r\n      expectedReturn,\r\n      createInvestment\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.investment-form {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.form-control {\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\n.investment-summary {\r\n  background-color: #f8f9fa;\r\n  padding: 1rem;\r\n  border-radius: 4px;\r\n  margin: 1rem 0;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #007bff;\r\n  color: white;\r\n  padding: 0.5rem 1rem;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn-primary:disabled {\r\n  background-color: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.alert-danger {\r\n  background-color: #f8d7da;\r\n  color: #721c24;\r\n  padding: 0.75rem;\r\n  border-radius: 4px;\r\n  margin-top: 1rem;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}