{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/UPFRONT/Documents/newprol/src/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/UPFRONT/Documents/newprol/src/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nexport default {\n  namespaced: true,\n  state: {\n    referrals: [],\n    referralStats: {\n      totalReferrals: 0,\n      totalEarnings: 0,\n      activeReferrals: 0\n    },\n    referralCode: null\n  },\n  mutations: {\n    SET_REFERRALS: function SET_REFERRALS(state, referrals) {\n      state.referrals = referrals;\n    },\n    SET_REFERRAL_STATS: function SET_REFERRAL_STATS(state, stats) {\n      state.referralStats = stats;\n    },\n    SET_REFERRAL_CODE: function SET_REFERRAL_CODE(state, code) {\n      state.referralCode = code;\n    },\n    ADD_REFERRAL: function ADD_REFERRAL(state, referral) {\n      state.referrals.push(referral);\n    },\n    UPDATE_REFERRAL: function UPDATE_REFERRAL(state, updatedReferral) {\n      var index = state.referrals.findIndex(function (ref) {\n        return ref._id === updatedReferral._id;\n      });\n      if (index !== -1) {\n        state.referrals.splice(index, 1, updatedReferral);\n      }\n    }\n  },\n  actions: {\n    fetchReferrals: function fetchReferrals(_ref) {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var commit, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.get('/api/referrals');\n            case 4:\n              response = _context.sent;\n              commit('SET_REFERRALS', response.data.referrals);\n              commit('SET_REFERRAL_STATS', response.data.stats);\n              return _context.abrupt(\"return\", response.data);\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              throw _context.t0;\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 10]]);\n      }))();\n    },\n    generateReferralCode: function generateReferralCode(_ref2) {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var commit, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios.post('/api/referrals/generate-code');\n            case 4:\n              response = _context2.sent;\n              commit('SET_REFERRAL_CODE', response.data.code);\n              return _context2.abrupt(\"return\", response.data.code);\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              throw _context2.t0;\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 9]]);\n      }))();\n    },\n    fetchReferralStats: function fetchReferralStats(_ref3) {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var commit, response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return axios.get('/api/referrals/stats');\n            case 4:\n              response = _context3.sent;\n              commit('SET_REFERRAL_STATS', response.data);\n              return _context3.abrupt(\"return\", response.data);\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](1);\n              throw _context3.t0;\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[1, 9]]);\n      }))();\n    },\n    updateReferral: function updateReferral(_ref4, _ref5) {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var commit, id, data, response;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              id = _ref5.id, data = _ref5.data;\n              _context4.prev = 2;\n              _context4.next = 5;\n              return axios.put(\"/api/referrals/\".concat(id), data);\n            case 5:\n              response = _context4.sent;\n              commit('UPDATE_REFERRAL', response.data);\n              return _context4.abrupt(\"return\", response.data);\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](2);\n              throw _context4.t0;\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[2, 10]]);\n      }))();\n    }\n  },\n  getters: {\n    allReferrals: function allReferrals(state) {\n      return state.referrals;\n    },\n    referralStats: function referralStats(state) {\n      return state.referralStats;\n    },\n    referralCode: function referralCode(state) {\n      return state.referralCode;\n    },\n    activeReferrals: function activeReferrals(state) {\n      return state.referrals.filter(function (ref) {\n        return ref.status === 'active';\n      });\n    },\n    completedReferrals: function completedReferrals(state) {\n      return state.referrals.filter(function (ref) {\n        return ref.status === 'completed';\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","namespaced","state","referrals","referralStats","totalReferrals","totalEarnings","activeReferrals","referralCode","mutations","SET_REFERRALS","SET_REFERRAL_STATS","stats","SET_REFERRAL_CODE","code","ADD_REFERRAL","referral","push","UPDATE_REFERRAL","updatedReferral","index","findIndex","ref","_id","splice","actions","fetchReferrals","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","commit","response","wrap","_callee$","_context","prev","next","get","sent","data","abrupt","t0","stop","generateReferralCode","_ref2","_callee2","_callee2$","_context2","post","fetchReferralStats","_ref3","_callee3","_callee3$","_context3","updateReferral","_ref4","_ref5","_callee4","id","_callee4$","_context4","put","concat","getters","allReferrals","filter","status","completedReferrals"],"sources":["C:/Users/UPFRONT/Documents/newprol/src/frontend/src/store/modules/referrals.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    referrals: [],\r\n    referralStats: {\r\n      totalReferrals: 0,\r\n      totalEarnings: 0,\r\n      activeReferrals: 0\r\n    },\r\n    referralCode: null\r\n  },\r\n  mutations: {\r\n    SET_REFERRALS(state, referrals) {\r\n      state.referrals = referrals\r\n    },\r\n    SET_REFERRAL_STATS(state, stats) {\r\n      state.referralStats = stats\r\n    },\r\n    SET_REFERRAL_CODE(state, code) {\r\n      state.referralCode = code\r\n    },\r\n    ADD_REFERRAL(state, referral) {\r\n      state.referrals.push(referral)\r\n    },\r\n    UPDATE_REFERRAL(state, updatedReferral) {\r\n      const index = state.referrals.findIndex(ref => ref._id === updatedReferral._id)\r\n      if (index !== -1) {\r\n        state.referrals.splice(index, 1, updatedReferral)\r\n      }\r\n    }\r\n  },\r\n  actions: {\r\n    async fetchReferrals({ commit }) {\r\n      try {\r\n        const response = await axios.get('/api/referrals')\r\n        commit('SET_REFERRALS', response.data.referrals)\r\n        commit('SET_REFERRAL_STATS', response.data.stats)\r\n        return response.data\r\n      } catch (error) {\r\n        throw error\r\n      }\r\n    },\r\n    async generateReferralCode({ commit }) {\r\n      try {\r\n        const response = await axios.post('/api/referrals/generate-code')\r\n        commit('SET_REFERRAL_CODE', response.data.code)\r\n        return response.data.code\r\n      } catch (error) {\r\n        throw error\r\n      }\r\n    },\r\n    async fetchReferralStats({ commit }) {\r\n      try {\r\n        const response = await axios.get('/api/referrals/stats')\r\n        commit('SET_REFERRAL_STATS', response.data)\r\n        return response.data\r\n      } catch (error) {\r\n        throw error\r\n      }\r\n    },\r\n    async updateReferral({ commit }, { id, data }) {\r\n      try {\r\n        const response = await axios.put(`/api/referrals/${id}`, data)\r\n        commit('UPDATE_REFERRAL', response.data)\r\n        return response.data\r\n      } catch (error) {\r\n        throw error\r\n      }\r\n    }\r\n  },\r\n  getters: {\r\n    allReferrals: state => state.referrals,\r\n    referralStats: state => state.referralStats,\r\n    referralCode: state => state.referralCode,\r\n    activeReferrals: state => state.referrals.filter(ref => ref.status === 'active'),\r\n    completedReferrals: state => state.referrals.filter(ref => ref.status === 'completed')\r\n  }\r\n} "],"mappings":";;;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAe;EACbC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE;IACLC,SAAS,EAAE,EAAE;IACbC,aAAa,EAAE;MACbC,cAAc,EAAE,CAAC;MACjBC,aAAa,EAAE,CAAC;MAChBC,eAAe,EAAE;IACnB,CAAC;IACDC,YAAY,EAAE;EAChB,CAAC;EACDC,SAAS,EAAE;IACTC,aAAa,WAAbA,aAAaA,CAACR,KAAK,EAAEC,SAAS,EAAE;MAC9BD,KAAK,CAACC,SAAS,GAAGA,SAAS;IAC7B,CAAC;IACDQ,kBAAkB,WAAlBA,kBAAkBA,CAACT,KAAK,EAAEU,KAAK,EAAE;MAC/BV,KAAK,CAACE,aAAa,GAAGQ,KAAK;IAC7B,CAAC;IACDC,iBAAiB,WAAjBA,iBAAiBA,CAACX,KAAK,EAAEY,IAAI,EAAE;MAC7BZ,KAAK,CAACM,YAAY,GAAGM,IAAI;IAC3B,CAAC;IACDC,YAAY,WAAZA,YAAYA,CAACb,KAAK,EAAEc,QAAQ,EAAE;MAC5Bd,KAAK,CAACC,SAAS,CAACc,IAAI,CAACD,QAAQ,CAAC;IAChC,CAAC;IACDE,eAAe,WAAfA,eAAeA,CAAChB,KAAK,EAAEiB,eAAe,EAAE;MACtC,IAAMC,KAAK,GAAGlB,KAAK,CAACC,SAAS,CAACkB,SAAS,CAAC,UAAAC,GAAG;QAAA,OAAIA,GAAG,CAACC,GAAG,KAAKJ,eAAe,CAACI,GAAG;MAAA,EAAC;MAC/E,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBlB,KAAK,CAACC,SAAS,CAACqB,MAAM,CAACJ,KAAK,EAAE,CAAC,EAAED,eAAe,CAAC;MACnD;IACF;EACF,CAAC;EACDM,OAAO,EAAE;IACDC,cAAc,WAAdA,cAAcA,CAAAC,IAAA,EAAa;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,MAAA,EAAAC,QAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAVN,MAAM,GAAAL,IAAA,CAANK,MAAM;cAAAI,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEFtC,KAAK,CAACuC,GAAG,CAAC,gBAAgB,CAAC;YAAA;cAA5CN,QAAQ,GAAAG,QAAA,CAAAI,IAAA;cACdR,MAAM,CAAC,eAAe,EAAEC,QAAQ,CAACQ,IAAI,CAACtC,SAAS,CAAC;cAChD6B,MAAM,CAAC,oBAAoB,EAAEC,QAAQ,CAACQ,IAAI,CAAC7B,KAAK,CAAC;cAAA,OAAAwB,QAAA,CAAAM,MAAA,WAC1CT,QAAQ,CAACQ,IAAI;YAAA;cAAAL,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAO,EAAA,GAAAP,QAAA;cAAA,MAAAA,QAAA,CAAAO,EAAA;YAAA;YAAA;cAAA,OAAAP,QAAA,CAAAQ,IAAA;UAAA;QAAA,GAAAb,OAAA;MAAA;IAIxB,CAAC;IACKc,oBAAoB,WAApBA,oBAAoBA,CAAAC,KAAA,EAAa;MAAA,OAAAlB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAiB,SAAA;QAAA,IAAAf,MAAA,EAAAC,QAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAc,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAZ,IAAA,GAAAY,SAAA,CAAAX,IAAA;YAAA;cAAVN,MAAM,GAAAc,KAAA,CAANd,MAAM;cAAAiB,SAAA,CAAAZ,IAAA;cAAAY,SAAA,CAAAX,IAAA;cAAA,OAERtC,KAAK,CAACkD,IAAI,CAAC,8BAA8B,CAAC;YAAA;cAA3DjB,QAAQ,GAAAgB,SAAA,CAAAT,IAAA;cACdR,MAAM,CAAC,mBAAmB,EAAEC,QAAQ,CAACQ,IAAI,CAAC3B,IAAI,CAAC;cAAA,OAAAmC,SAAA,CAAAP,MAAA,WACxCT,QAAQ,CAACQ,IAAI,CAAC3B,IAAI;YAAA;cAAAmC,SAAA,CAAAZ,IAAA;cAAAY,SAAA,CAAAN,EAAA,GAAAM,SAAA;cAAA,MAAAA,SAAA,CAAAN,EAAA;YAAA;YAAA;cAAA,OAAAM,SAAA,CAAAL,IAAA;UAAA;QAAA,GAAAG,QAAA;MAAA;IAI7B,CAAC;IACKI,kBAAkB,WAAlBA,kBAAkBA,CAAAC,KAAA,EAAa;MAAA,OAAAxB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAuB,SAAA;QAAA,IAAArB,MAAA,EAAAC,QAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAoB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAlB,IAAA,GAAAkB,SAAA,CAAAjB,IAAA;YAAA;cAAVN,MAAM,GAAAoB,KAAA,CAANpB,MAAM;cAAAuB,SAAA,CAAAlB,IAAA;cAAAkB,SAAA,CAAAjB,IAAA;cAAA,OAENtC,KAAK,CAACuC,GAAG,CAAC,sBAAsB,CAAC;YAAA;cAAlDN,QAAQ,GAAAsB,SAAA,CAAAf,IAAA;cACdR,MAAM,CAAC,oBAAoB,EAAEC,QAAQ,CAACQ,IAAI,CAAC;cAAA,OAAAc,SAAA,CAAAb,MAAA,WACpCT,QAAQ,CAACQ,IAAI;YAAA;cAAAc,SAAA,CAAAlB,IAAA;cAAAkB,SAAA,CAAAZ,EAAA,GAAAY,SAAA;cAAA,MAAAA,SAAA,CAAAZ,EAAA;YAAA;YAAA;cAAA,OAAAY,SAAA,CAAAX,IAAA;UAAA;QAAA,GAAAS,QAAA;MAAA;IAIxB,CAAC;IACKG,cAAc,WAAdA,cAAcA,CAAAC,KAAA,EAAAC,KAAA,EAA2B;MAAA,OAAA9B,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAA6B,SAAA;QAAA,IAAA3B,MAAA,EAAA4B,EAAA,EAAAnB,IAAA,EAAAR,QAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAA2B,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAzB,IAAA,GAAAyB,SAAA,CAAAxB,IAAA;YAAA;cAAxBN,MAAM,GAAAyB,KAAA,CAANzB,MAAM;cAAM4B,EAAE,GAAAF,KAAA,CAAFE,EAAE,EAAEnB,IAAI,GAAAiB,KAAA,CAAJjB,IAAI;cAAAqB,SAAA,CAAAzB,IAAA;cAAAyB,SAAA,CAAAxB,IAAA;cAAA,OAEhBtC,KAAK,CAAC+D,GAAG,mBAAAC,MAAA,CAAmBJ,EAAE,GAAInB,IAAI,CAAC;YAAA;cAAxDR,QAAQ,GAAA6B,SAAA,CAAAtB,IAAA;cACdR,MAAM,CAAC,iBAAiB,EAAEC,QAAQ,CAACQ,IAAI,CAAC;cAAA,OAAAqB,SAAA,CAAApB,MAAA,WACjCT,QAAQ,CAACQ,IAAI;YAAA;cAAAqB,SAAA,CAAAzB,IAAA;cAAAyB,SAAA,CAAAnB,EAAA,GAAAmB,SAAA;cAAA,MAAAA,SAAA,CAAAnB,EAAA;YAAA;YAAA;cAAA,OAAAmB,SAAA,CAAAlB,IAAA;UAAA;QAAA,GAAAe,QAAA;MAAA;IAIxB;EACF,CAAC;EACDM,OAAO,EAAE;IACPC,YAAY,EAAE,SAAdA,YAAYA,CAAEhE,KAAK;MAAA,OAAIA,KAAK,CAACC,SAAS;IAAA;IACtCC,aAAa,EAAE,SAAfA,aAAaA,CAAEF,KAAK;MAAA,OAAIA,KAAK,CAACE,aAAa;IAAA;IAC3CI,YAAY,EAAE,SAAdA,YAAYA,CAAEN,KAAK;MAAA,OAAIA,KAAK,CAACM,YAAY;IAAA;IACzCD,eAAe,EAAE,SAAjBA,eAAeA,CAAEL,KAAK;MAAA,OAAIA,KAAK,CAACC,SAAS,CAACgE,MAAM,CAAC,UAAA7C,GAAG;QAAA,OAAIA,GAAG,CAAC8C,MAAM,KAAK,QAAQ;MAAA,EAAC;IAAA;IAChFC,kBAAkB,EAAE,SAApBA,kBAAkBA,CAAEnE,KAAK;MAAA,OAAIA,KAAK,CAACC,SAAS,CAACgE,MAAM,CAAC,UAAA7C,GAAG;QAAA,OAAIA,GAAG,CAAC8C,MAAM,KAAK,WAAW;MAAA,EAAC;IAAA;EACxF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}