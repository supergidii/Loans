{"ast":null,"code":"import \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"investment-list\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"loading\"\n};\nvar _hoisted_3 = {\n  key: 1,\n  \"class\": \"error\"\n};\nvar _hoisted_4 = {\n  key: 2,\n  \"class\": \"no-investments\"\n};\nvar _hoisted_5 = {\n  key: 3,\n  \"class\": \"table-container\"\n};\nvar _hoisted_6 = {\n  \"class\": \"investments-table\"\n};\nvar _hoisted_7 = [\"onClick\", \"disabled\"];\nvar _hoisted_8 = {\n  key: 1\n};\nvar _hoisted_9 = {\n  key: 4,\n  \"class\": \"investment-stats\"\n};\nvar _hoisted_10 = {\n  \"class\": \"stats-grid\"\n};\nvar _hoisted_11 = {\n  \"class\": \"stat-card\"\n};\nvar _hoisted_12 = {\n  \"class\": \"stat-card\"\n};\nvar _hoisted_13 = {\n  \"class\": \"stat-card\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"h2\", null, \"Your Investments\", -1 /* HOISTED */)), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \" Loading investments... \")) : $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($setup.error), 1 /* TEXT */)) : $setup.investments.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \" No investments found. Start investing today! \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"table\", _hoisted_6, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Username\"), _createElementVNode(\"th\", null, \"Expected Return\"), _createElementVNode(\"th\", null, \"Start Date\"), _createElementVNode(\"th\", null, \"End Date\"), _createElementVNode(\"th\", null, \"Status\"), _createElementVNode(\"th\", null, \"Actions\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.investments, function (investment) {\n    var _investment$user;\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: investment._id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(((_investment$user = investment.user) === null || _investment$user === void 0 ? void 0 : _investment$user.username) || 'N/A'), 1 /* TEXT */), _createElementVNode(\"td\", null, \"$\" + _toDisplayString(investment.expectedReturn.toFixed(2)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(new Date(investment.startDate).toLocaleDateString()), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(new Date(investment.endDate).toLocaleDateString()), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      \"class\": _normalizeClass(['status-badge', investment.status.toLowerCase()])\n    }, _toDisplayString(investment.status), 3 /* TEXT, CLASS */)]), _createElementVNode(\"td\", null, [investment.status === 'pending' ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: function onClick($event) {\n        return $setup.confirmInvestment(investment._id);\n      },\n      \"class\": \"confirm-btn\",\n      disabled: $setup.loading\n    }, \" Confirm \", 8 /* PROPS */, _hoisted_7)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_8, \"-\"))])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])), $setup.investments && $setup.investments.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"Investment Statistics\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_cache[1] || (_cache[1] = _createElementVNode(\"h4\", null, \"Total Invested\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, \"$\" + _toDisplayString($setup.totalInvested), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_12, [_cache[2] || (_cache[2] = _createElementVNode(\"h4\", null, \"Expected Returns\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, \"$\" + _toDisplayString($setup.totalExpectedReturns), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_13, [_cache[3] || (_cache[3] = _createElementVNode(\"h4\", null, \"Active Investments\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($setup.activeInvestments), 1 /* TEXT */)])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","$setup","loading","_hoisted_2","error","_hoisted_3","_toDisplayString","investments","length","_hoisted_4","_hoisted_5","_hoisted_6","_Fragment","_renderList","investment","_investment$user","_id","user","username","expectedReturn","toFixed","Date","startDate","toLocaleDateString","endDate","_normalizeClass","status","toLowerCase","onClick","$event","confirmInvestment","disabled","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","totalInvested","_hoisted_12","totalExpectedReturns","_hoisted_13","activeInvestments","_createCommentVNode"],"sources":["C:\\Users\\UPFRONT\\Documents\\newprol\\src\\frontend\\src\\components\\InvestmentList.vue"],"sourcesContent":["<template>\r\n  <div class=\"investment-list\">\r\n    <h2>Your Investments</h2>\r\n    \r\n    <div v-if=\"loading\" class=\"loading\">\r\n      Loading investments...\r\n    </div>\r\n    \r\n    <div v-else-if=\"error\" class=\"error\">\r\n      {{ error }}\r\n    </div>\r\n    \r\n    <div v-else-if=\"investments.length === 0\" class=\"no-investments\">\r\n      No investments found. Start investing today!\r\n    </div>\r\n    \r\n    <div v-else class=\"table-container\">\r\n      <table class=\"investments-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Username</th>\r\n            <th>Expected Return</th>\r\n            <th>Start Date</th>\r\n            <th>End Date</th>\r\n            <th>Status</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"investment in investments\" :key=\"investment._id\">\r\n            <td>{{ investment.user?.username || 'N/A' }}</td>\r\n            <td>${{ investment.expectedReturn.toFixed(2) }}</td>\r\n            <td>{{ new Date(investment.startDate).toLocaleDateString() }}</td>\r\n            <td>{{ new Date(investment.endDate).toLocaleDateString() }}</td>\r\n            <td>\r\n              <span :class=\"['status-badge', investment.status.toLowerCase()]\">\r\n                {{ investment.status }}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <button \r\n                v-if=\"investment.status === 'pending'\"\r\n                @click=\"confirmInvestment(investment._id)\"\r\n                class=\"confirm-btn\"\r\n                :disabled=\"loading\"\r\n              >\r\n                Confirm\r\n              </button>\r\n              <span v-else>-</span>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <div class=\"investment-stats\" v-if=\"investments && investments.length > 0\">\r\n      <h3>Investment Statistics</h3>\r\n      <div class=\"stats-grid\">\r\n        <div class=\"stat-card\">\r\n          <h4>Total Invested</h4>\r\n          <p>${{ totalInvested }}</p>\r\n        </div>\r\n        <div class=\"stat-card\">\r\n          <h4>Expected Returns</h4>\r\n          <p>${{ totalExpectedReturns }}</p>\r\n        </div>\r\n        <div class=\"stat-card\">\r\n          <h4>Active Investments</h4>\r\n          <p>{{ activeInvestments }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nexport default {\r\n  name: 'InvestmentList',\r\n  setup() {\r\n    const store = useStore()\r\n\r\n    const investments = computed(() => store.state.investments.investments || [])\r\n    const loading = computed(() => store.state.investments.loading)\r\n    const error = computed(() => store.state.investments.error)\r\n\r\n    const totalInvested = computed(() => {\r\n      if (!investments.value) return '0.00'\r\n      return investments.value.reduce((sum, inv) => sum + (inv.amount || 0), 0).toFixed(2)\r\n    })\r\n\r\n    const totalExpectedReturns = computed(() => {\r\n      if (!investments.value) return '0.00'\r\n      return investments.value.reduce((sum, inv) => sum + (inv.expectedReturn || 0), 0).toFixed(2)\r\n    })\r\n\r\n    const activeInvestments = computed(() => {\r\n      if (!investments.value) return 0\r\n      return investments.value.filter(inv => inv.status.toLowerCase() === 'active').length\r\n    })\r\n\r\n    const confirmInvestment = async (investmentId) => {\r\n      try {\r\n        await store.dispatch('investments/confirmInvestment', investmentId)\r\n        // Refresh the investments list after confirmation\r\n        await store.dispatch('investments/fetchInvestments')\r\n      } catch (error) {\r\n        console.error('Failed to confirm investment:', error)\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      store.dispatch('investments/fetchInvestments')\r\n    })\r\n\r\n    return {\r\n      investments,\r\n      loading,\r\n      error,\r\n      totalInvested,\r\n      totalExpectedReturns,\r\n      activeInvestments,\r\n      confirmInvestment\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.investment-list {\r\n  padding: 20px;\r\n}\r\n\r\n.loading, .error, .no-investments {\r\n  text-align: center;\r\n  padding: 20px;\r\n  font-size: 1.1em;\r\n}\r\n\r\n.error {\r\n  color: #dc3545;\r\n}\r\n\r\n.table-container {\r\n  overflow-x: auto;\r\n  margin-top: 20px;\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.investments-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  min-width: 800px;\r\n}\r\n\r\n.investments-table th,\r\n.investments-table td {\r\n  padding: 12px 16px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #e5e7eb;\r\n}\r\n\r\n.investments-table th {\r\n  background-color: #f9fafb;\r\n  font-weight: 600;\r\n  color: #374151;\r\n}\r\n\r\n.investments-table tr:hover {\r\n  background-color: #f9fafb;\r\n}\r\n\r\n.status-badge {\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  font-size: 0.9em;\r\n  font-weight: 500;\r\n  display: inline-block;\r\n}\r\n\r\n.status-badge.active {\r\n  background-color: #e3fcef;\r\n  color: #0a6c3b;\r\n}\r\n\r\n.status-badge.completed {\r\n  background-color: #e7f5ff;\r\n  color: #0c63e4;\r\n}\r\n\r\n.status-badge.cancelled {\r\n  background-color: #fee2e2;\r\n  color: #dc2626;\r\n}\r\n\r\n.status-badge.pending {\r\n  background-color: #fff7ed;\r\n  color: #c2410c;\r\n}\r\n\r\n.confirm-btn {\r\n  background-color: #10b981;\r\n  color: white;\r\n  border: none;\r\n  padding: 6px 12px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.confirm-btn:hover {\r\n  background-color: #059669;\r\n}\r\n\r\n.confirm-btn:disabled {\r\n  background-color: #9ca3af;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.investment-stats {\r\n  margin-top: 40px;\r\n}\r\n\r\n.stats-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.stat-card {\r\n  background: white;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n}\r\n\r\n.stat-card h4 {\r\n  margin: 0 0 10px 0;\r\n  color: #6b7280;\r\n  font-size: 0.9em;\r\n}\r\n\r\n.stat-card p {\r\n  margin: 0;\r\n  font-size: 1.5em;\r\n  font-weight: 600;\r\n  color: #111827;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}