{"ast":null,"code":"import axios from 'axios';\nexport default {\n  namespaced: true,\n  state: {\n    investments: [],\n    currentInvestment: null,\n    investmentStats: {\n      totalInvested: 0,\n      totalEarnings: 0,\n      activeInvestments: 0\n    }\n  },\n  mutations: {\n    SET_INVESTMENTS(state, investments) {\n      state.investments = investments;\n    },\n    SET_CURRENT_INVESTMENT(state, investment) {\n      state.currentInvestment = investment;\n    },\n    SET_INVESTMENT_STATS(state, stats) {\n      state.investmentStats = stats;\n    },\n    ADD_INVESTMENT(state, investment) {\n      state.investments.push(investment);\n    },\n    UPDATE_INVESTMENT(state, updatedInvestment) {\n      const index = state.investments.findIndex(inv => inv._id === updatedInvestment._id);\n      if (index !== -1) {\n        state.investments.splice(index, 1, updatedInvestment);\n      }\n    }\n  },\n  actions: {\n    async fetchInvestments({\n      commit\n    }) {\n      try {\n        const response = await axios.get('/api/investments');\n        commit('SET_INVESTMENTS', response.data.investments);\n        commit('SET_INVESTMENT_STATS', response.data.stats);\n        return response.data;\n      } catch (error) {\n        throw error;\n      }\n    },\n    async createInvestment({\n      commit\n    }, investmentData) {\n      try {\n        const response = await axios.post('/api/investments', investmentData);\n        commit('ADD_INVESTMENT', response.data);\n        return response.data;\n      } catch (error) {\n        throw error;\n      }\n    },\n    async updateInvestment({\n      commit\n    }, {\n      id,\n      data\n    }) {\n      try {\n        const response = await axios.put(`/api/investments/${id}`, data);\n        commit('UPDATE_INVESTMENT', response.data);\n        return response.data;\n      } catch (error) {\n        throw error;\n      }\n    },\n    async fetchInvestmentStats({\n      commit\n    }) {\n      try {\n        const response = await axios.get('/api/investments/stats');\n        commit('SET_INVESTMENT_STATS', response.data);\n        return response.data;\n      } catch (error) {\n        throw error;\n      }\n    }\n  },\n  getters: {\n    allInvestments: state => state.investments,\n    currentInvestment: state => state.currentInvestment,\n    investmentStats: state => state.investmentStats,\n    activeInvestments: state => state.investments.filter(inv => inv.status === 'active'),\n    completedInvestments: state => state.investments.filter(inv => inv.status === 'completed')\n  }\n};","map":{"version":3,"names":["axios","namespaced","state","investments","currentInvestment","investmentStats","totalInvested","totalEarnings","activeInvestments","mutations","SET_INVESTMENTS","SET_CURRENT_INVESTMENT","investment","SET_INVESTMENT_STATS","stats","ADD_INVESTMENT","push","UPDATE_INVESTMENT","updatedInvestment","index","findIndex","inv","_id","splice","actions","fetchInvestments","commit","response","get","data","error","createInvestment","investmentData","post","updateInvestment","id","put","fetchInvestmentStats","getters","allInvestments","filter","status","completedInvestments"],"sources":["C:/Users/UPFRONT/Documents/newprol/src/frontend/src/store/modules/investments.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    investments: [],\r\n    currentInvestment: null,\r\n    investmentStats: {\r\n      totalInvested: 0,\r\n      totalEarnings: 0,\r\n      activeInvestments: 0\r\n    }\r\n  },\r\n  mutations: {\r\n    SET_INVESTMENTS(state, investments) {\r\n      state.investments = investments\r\n    },\r\n    SET_CURRENT_INVESTMENT(state, investment) {\r\n      state.currentInvestment = investment\r\n    },\r\n    SET_INVESTMENT_STATS(state, stats) {\r\n      state.investmentStats = stats\r\n    },\r\n    ADD_INVESTMENT(state, investment) {\r\n      state.investments.push(investment)\r\n    },\r\n    UPDATE_INVESTMENT(state, updatedInvestment) {\r\n      const index = state.investments.findIndex(inv => inv._id === updatedInvestment._id)\r\n      if (index !== -1) {\r\n        state.investments.splice(index, 1, updatedInvestment)\r\n      }\r\n    }\r\n  },\r\n  actions: {\r\n    async fetchInvestments({ commit }) {\r\n      try {\r\n        const response = await axios.get('/api/investments')\r\n        commit('SET_INVESTMENTS', response.data.investments)\r\n        commit('SET_INVESTMENT_STATS', response.data.stats)\r\n        return response.data\r\n      } catch (error) {\r\n        throw error\r\n      }\r\n    },\r\n    async createInvestment({ commit }, investmentData) {\r\n      try {\r\n        const response = await axios.post('/api/investments', investmentData)\r\n        commit('ADD_INVESTMENT', response.data)\r\n        return response.data\r\n      } catch (error) {\r\n        throw error\r\n      }\r\n    },\r\n    async updateInvestment({ commit }, { id, data }) {\r\n      try {\r\n        const response = await axios.put(`/api/investments/${id}`, data)\r\n        commit('UPDATE_INVESTMENT', response.data)\r\n        return response.data\r\n      } catch (error) {\r\n        throw error\r\n      }\r\n    },\r\n    async fetchInvestmentStats({ commit }) {\r\n      try {\r\n        const response = await axios.get('/api/investments/stats')\r\n        commit('SET_INVESTMENT_STATS', response.data)\r\n        return response.data\r\n      } catch (error) {\r\n        throw error\r\n      }\r\n    }\r\n  },\r\n  getters: {\r\n    allInvestments: state => state.investments,\r\n    currentInvestment: state => state.currentInvestment,\r\n    investmentStats: state => state.investmentStats,\r\n    activeInvestments: state => state.investments.filter(inv => inv.status === 'active'),\r\n    completedInvestments: state => state.investments.filter(inv => inv.status === 'completed')\r\n  }\r\n} "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAe;EACbC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE;IACLC,WAAW,EAAE,EAAE;IACfC,iBAAiB,EAAE,IAAI;IACvBC,eAAe,EAAE;MACfC,aAAa,EAAE,CAAC;MAChBC,aAAa,EAAE,CAAC;MAChBC,iBAAiB,EAAE;IACrB;EACF,CAAC;EACDC,SAAS,EAAE;IACTC,eAAeA,CAACR,KAAK,EAAEC,WAAW,EAAE;MAClCD,KAAK,CAACC,WAAW,GAAGA,WAAW;IACjC,CAAC;IACDQ,sBAAsBA,CAACT,KAAK,EAAEU,UAAU,EAAE;MACxCV,KAAK,CAACE,iBAAiB,GAAGQ,UAAU;IACtC,CAAC;IACDC,oBAAoBA,CAACX,KAAK,EAAEY,KAAK,EAAE;MACjCZ,KAAK,CAACG,eAAe,GAAGS,KAAK;IAC/B,CAAC;IACDC,cAAcA,CAACb,KAAK,EAAEU,UAAU,EAAE;MAChCV,KAAK,CAACC,WAAW,CAACa,IAAI,CAACJ,UAAU,CAAC;IACpC,CAAC;IACDK,iBAAiBA,CAACf,KAAK,EAAEgB,iBAAiB,EAAE;MAC1C,MAAMC,KAAK,GAAGjB,KAAK,CAACC,WAAW,CAACiB,SAAS,CAACC,GAAG,IAAIA,GAAG,CAACC,GAAG,KAAKJ,iBAAiB,CAACI,GAAG,CAAC;MACnF,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBjB,KAAK,CAACC,WAAW,CAACoB,MAAM,CAACJ,KAAK,EAAE,CAAC,EAAED,iBAAiB,CAAC;MACvD;IACF;EACF,CAAC;EACDM,OAAO,EAAE;IACP,MAAMC,gBAAgBA,CAAC;MAAEC;IAAO,CAAC,EAAE;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,GAAG,CAAC,kBAAkB,CAAC;QACpDF,MAAM,CAAC,iBAAiB,EAAEC,QAAQ,CAACE,IAAI,CAAC1B,WAAW,CAAC;QACpDuB,MAAM,CAAC,sBAAsB,EAAEC,QAAQ,CAACE,IAAI,CAACf,KAAK,CAAC;QACnD,OAAOa,QAAQ,CAACE,IAAI;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd,MAAMA,KAAK;MACb;IACF,CAAC;IACD,MAAMC,gBAAgBA,CAAC;MAAEL;IAAO,CAAC,EAAEM,cAAc,EAAE;MACjD,IAAI;QACF,MAAML,QAAQ,GAAG,MAAM3B,KAAK,CAACiC,IAAI,CAAC,kBAAkB,EAAED,cAAc,CAAC;QACrEN,MAAM,CAAC,gBAAgB,EAAEC,QAAQ,CAACE,IAAI,CAAC;QACvC,OAAOF,QAAQ,CAACE,IAAI;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd,MAAMA,KAAK;MACb;IACF,CAAC;IACD,MAAMI,gBAAgBA,CAAC;MAAER;IAAO,CAAC,EAAE;MAAES,EAAE;MAAEN;IAAK,CAAC,EAAE;MAC/C,IAAI;QACF,MAAMF,QAAQ,GAAG,MAAM3B,KAAK,CAACoC,GAAG,CAAC,oBAAoBD,EAAE,EAAE,EAAEN,IAAI,CAAC;QAChEH,MAAM,CAAC,mBAAmB,EAAEC,QAAQ,CAACE,IAAI,CAAC;QAC1C,OAAOF,QAAQ,CAACE,IAAI;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd,MAAMA,KAAK;MACb;IACF,CAAC;IACD,MAAMO,oBAAoBA,CAAC;MAAEX;IAAO,CAAC,EAAE;MACrC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,GAAG,CAAC,wBAAwB,CAAC;QAC1DF,MAAM,CAAC,sBAAsB,EAAEC,QAAQ,CAACE,IAAI,CAAC;QAC7C,OAAOF,QAAQ,CAACE,IAAI;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd,MAAMA,KAAK;MACb;IACF;EACF,CAAC;EACDQ,OAAO,EAAE;IACPC,cAAc,EAAErC,KAAK,IAAIA,KAAK,CAACC,WAAW;IAC1CC,iBAAiB,EAAEF,KAAK,IAAIA,KAAK,CAACE,iBAAiB;IACnDC,eAAe,EAAEH,KAAK,IAAIA,KAAK,CAACG,eAAe;IAC/CG,iBAAiB,EAAEN,KAAK,IAAIA,KAAK,CAACC,WAAW,CAACqC,MAAM,CAACnB,GAAG,IAAIA,GAAG,CAACoB,MAAM,KAAK,QAAQ,CAAC;IACpFC,oBAAoB,EAAExC,KAAK,IAAIA,KAAK,CAACC,WAAW,CAACqC,MAAM,CAACnB,GAAG,IAAIA,GAAG,CAACoB,MAAM,KAAK,WAAW;EAC3F;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}