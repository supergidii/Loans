{"ast":null,"code":"import { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'Login',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const email = ref('');\n    const password = ref('');\n    const handleLogin = async () => {\n      try {\n        await store.dispatch('auth/login', {\n          email: email.value,\n          password: password.value\n        });\n        router.push('/dashboard');\n      } catch (error) {\n        console.error('Login failed:', error);\n      }\n    };\n    return {\n      email,\n      password,\n      handleLogin\n    };\n  }\n};","map":{"version":3,"names":["ref","useStore","useRouter","name","setup","store","router","email","password","handleLogin","dispatch","value","push","error","console"],"sources":["C:\\Users\\UPFRONT\\Documents\\newprol\\src\\frontend\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login\">\r\n    <div class=\"container\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-6\">\r\n          <div class=\"card mt-5\">\r\n            <h2 class=\"text-center mb-4\">Login</h2>\r\n            <form @submit.prevent=\"handleLogin\">\r\n              <div class=\"form-group\">\r\n                <label for=\"email\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  v-model=\"email\"\r\n                  class=\"form-control\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  v-model=\"password\"\r\n                  class=\"form-control\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <button type=\"submit\" class=\"btn btn-primary w-100\">Login</button>\r\n              </div>\r\n              <div class=\"text-center mt-3\">\r\n                <router-link to=\"/forgot-password\">Forgot Password?</router-link>\r\n              </div>\r\n              <div class=\"text-center mt-3\">\r\n                Don't have an account?\r\n                <router-link to=\"/register\">Register</router-link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\n\r\nexport default {\r\n  name: 'Login',\r\n  setup() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const email = ref('')\r\n    const password = ref('')\r\n\r\n    const handleLogin = async () => {\r\n      try {\r\n        await store.dispatch('auth/login', {\r\n          email: email.value,\r\n          password: password.value\r\n        })\r\n        router.push('/dashboard')\r\n      } catch (error) {\r\n        console.error('Login failed:', error)\r\n      }\r\n    }\r\n\r\n    return {\r\n      email,\r\n      password,\r\n      handleLogin\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.card {\r\n  padding: 2rem;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\nlabel {\r\n  margin-bottom: 0.5rem;\r\n  color: #2c3e50;\r\n}\r\n</style> "],"mappings":"AA+CA,SAASA,GAAE,QAAS,KAAI;AACxB,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,SAAQ,QAAS,YAAW;AAErC,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,QAAQ,CAAC;IACvB,MAAMK,MAAK,GAAIJ,SAAS,CAAC;IACzB,MAAMK,KAAI,GAAIP,GAAG,CAAC,EAAE;IACpB,MAAMQ,QAAO,GAAIR,GAAG,CAAC,EAAE;IAEvB,MAAMS,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMJ,KAAK,CAACK,QAAQ,CAAC,YAAY,EAAE;UACjCH,KAAK,EAAEA,KAAK,CAACI,KAAK;UAClBH,QAAQ,EAAEA,QAAQ,CAACG;QACrB,CAAC;QACDL,MAAM,CAACM,IAAI,CAAC,YAAY;MAC1B,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK;MACtC;IACF;IAEA,OAAO;MACLN,KAAK;MACLC,QAAQ;MACRC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}